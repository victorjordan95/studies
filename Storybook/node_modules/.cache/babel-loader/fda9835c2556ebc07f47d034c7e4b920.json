{"ast":null,"code":"var _jsxFileName = \"/Users/vijordan/Desktop/Victor/Studies/studies/Storybook/src/pages/Search/index.js\";\nimport React from 'react';\nimport { useSearch } from \"../../hooks\";\nimport Container from \"../../components/Container\";\nimport Autocomplete from \"../../components/Autocomplete\";\nimport ListItem from '../../components/ListItem';\n\nconst Search = ({ ...props\n}) => {\n  const search = props.location.search;\n  const params = new URLSearchParams(search);\n  const query = params.get('query');\n  const {\n    articles,\n    status\n  } = useSearch(query, 50);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, ({\n    searchValue,\n    onSearchChange,\n    articles\n  }) => /*#__PURE__*/React.createElement(Autocomplete, {\n    searchValue: searchValue,\n    onSearchChange: onSearchChange,\n    articles: articles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 63\n    }\n  })), !articles.length && status === 'SUCCESS' ? /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 19\n    }\n  }, \"No articles for query: \", query) : articles.map(article => /*#__PURE__*/React.createElement(ListItem, Object.assign({}, article, {\n    key: article.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 43\n    }\n  }))));\n};\n\nexport default Search;","map":{"version":3,"sources":["/Users/vijordan/Desktop/Victor/Studies/studies/Storybook/src/pages/Search/index.js"],"names":["React","useSearch","Container","Autocomplete","ListItem","Search","props","search","location","params","URLSearchParams","query","get","articles","status","searchValue","onSearchChange","length","map","article","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,QAAP,MAAqB,2BAArB;;AAEA,MAAMC,MAAM,GAAG,CAAC,EAAC,GAAGC;AAAJ,CAAD,KAAgB;AAC3B,QAAMC,MAAM,GAAGD,KAAK,CAACE,QAAN,CAAeD,MAA9B;AACA,QAAME,MAAM,GAAG,IAAIC,eAAJ,CAAoBH,MAApB,CAAf;AACA,QAAMI,KAAK,GAAGF,MAAM,CAACG,GAAP,CAAW,OAAX,CAAd;AAEA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAuBb,SAAS,CAACU,KAAD,EAAQ,EAAR,CAAtC;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAAC;AAACI,IAAAA,WAAD;AAAcC,IAAAA,cAAd;AAA8BH,IAAAA;AAA9B,GAAD,kBAA6C,oBAAC,YAAD;AAC1C,IAAA,WAAW,EAAEE,WAD6B;AAE1C,IAAA,cAAc,EAAEC,cAF0B;AAG1C,IAAA,QAAQ,EAAEH,QAHgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADlD,CADJ,EASK,CAACA,QAAQ,CAACI,MAAV,IAAoBH,MAAM,KAAK,SAA/B,gBACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAA4BH,KAA5B,CADL,GAEKE,QAAQ,CAACK,GAAT,CAAaC,OAAO,iBAAI,oBAAC,QAAD,oBAAcA,OAAd;AAAuB,IAAA,GAAG,EAAEA,OAAO,CAACC,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAxB,CAXV,CADJ;AAeH,CAtBD;;AAwBA,eAAef,MAAf","sourcesContent":["import React from 'react';\nimport { useSearch } from \"../../hooks\";\nimport Container from \"../../components/Container\";\nimport Autocomplete from \"../../components/Autocomplete\";\nimport ListItem from '../../components/ListItem';\n\nconst Search = ({...props}) => {\n    const search = props.location.search;\n    const params = new URLSearchParams(search);\n    const query = params.get('query');\n\n    const { articles, status } = useSearch(query, 50);\n\n    return (\n        <div>\n            <Container>\n                {({searchValue, onSearchChange, articles}) => <Autocomplete\n                    searchValue={searchValue}\n                    onSearchChange={onSearchChange}\n                    articles={articles}\n                />}\n            </Container>\n\n            {!articles.length && status === 'SUCCESS'\n                ? <h3>No articles for query: {query}</h3>\n                : articles.map(article => <ListItem {...article} key={article.id}/>)}\n        </div>\n    )\n};\n\nexport default Search"]},"metadata":{},"sourceType":"module"}